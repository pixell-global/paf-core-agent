name: test_no_db

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    # Add timeout to prevent hanging jobs
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          # For pull_request_target, checkout the PR head instead of base
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          # Fetch full history for better caching
          fetch-depth: 0

      - name: Debug workflow info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "PR number: ${{ github.event.pull_request.number }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "Repository: ${{ github.repository }}"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel pip-tools
          pip install -r requirements.txt

      - name: Run core tests (no database)
        run: |
          python test_no_db.py

      - name: Run pytest tests
        run: |
          pytest -v --tb=short
        continue-on-error: true # pytest may fail if no test files found

      - name: Run linting
        run: |
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ --count --max-complexity=10 --max-line-length=100 --statistics
        continue-on-error: true

      - name: Run type checking
        run: |
          mypy app/ --ignore-missing-imports
        continue-on-error: true
